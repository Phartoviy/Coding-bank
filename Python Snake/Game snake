import pygame
import time
import random 
import sys

pygame.mixer.pre_init(44100, -16, 1, 512)
pygame.init()
 
white = (255, 255, 255)
yellow = (255, 255, 102)
black = (0, 0, 0)
red = (213, 50, 80)
green = (0, 255, 0)
blue = (50, 153, 213)
green_snake = (154,205,50)
orange = (255, 165, 0)
violet = (238, 130, 238)
lime = (0, 255, 0)
indigo = (75, 0, 130)
golden = (218, 165, 32)

DIS_WIDTH = 800
DIS_HEIGHT = 600

global paused
paused = False

global records
records = False

global menu
menu = True#Переменная отвечающая за меню

global last_records
last_records = []


try:
    catch = pygame.mixer.Sound('point.ogg')#подключение звука 
except FileNotFoundError:
    catch = -999


alphavit = [
    'A','B','C',
    'D','E','F','G',
    'H','J','K','L'
    ]
 
window = pygame.display.set_mode((DIS_WIDTH, DIS_HEIGHT))
pygame.display.set_caption('Snake')
 
clock = pygame.time.Clock()
 
snake_block = 10
global snake_speed
snake_speed = 10#Глобальная переменная скорости змейки
color_line = yellow
color_rect = golden

global color_easy
color_easy = yellow
global color_medium
color_medium = yellow
global color_hard
color_hard = yellow
global color_new
color_new = yellow
global color_exit
color_exit = yellow
global color_records
color_records = yellow
 
font_style = pygame.font.SysFont("bahnschrift", 20)
score_font = pygame.font.SysFont("comicsansms", 20)
pause_style = pygame.font.SysFont("verdana", 40)
menu_style = pygame.font.SysFont("arial", 45)
records_style = pygame.font.SysFont("arial", 25)

def Your_score(score):
    value = score_font.render("Очки: " + str(score), True, yellow)
    window.blit(value, [DIS_WIDTH-100, 0])
 
 
 
def our_snake(snake_block, snake_list):
    for x in snake_list:
        pygame.draw.rect(window, green_snake, [x[0], x[1], snake_block, snake_block])
 
 
def text(msg, color):
    mesg = font_style.render(msg, True, color)
    window.blit(mesg, [DIS_WIDTH / 6,
                    DIS_HEIGHT / 3])

def screen_pause(msg):
    pygame.draw.rect(window, color_rect, 
                 (250, 200, 350, 200), 8)
    pygame.draw.rect(window, color_rect, 
                 (225, 175, 400, 250), 8)
    mesg = pause_style.render(msg, True, indigo)
    window.blit(mesg, [DIS_WIDTH / 2-40,
                    DIS_HEIGHT / 2-25])
    


def screen_menu(color1, color2, color3):
    pygame.draw.rect(window, color_rect, 
                 (250, 120, 350, 200), 8)
    pygame.draw.rect(window, color_rect, 
                 (250, 350, 350, 200), 8)
    pygame.draw.rect(window, color_rect, 
                 (50, 50, 50, 50), 8)
    mesg = records_style.render("Р", True, color1)
    window.blit(mesg, [140 / 2 ,
                    120 / 2])
    mesg = menu_style.render("Новая игра", True, color2)
    window.blit(mesg, [DIS_WIDTH / 2-65,
                    DIS_HEIGHT / 2-105])
    mesg = menu_style.render("Выйти", True, color3)
    window.blit(mesg, [DIS_WIDTH / 2-35,
                    DIS_HEIGHT / 2+120])


def screen_records():
    #print(last_records)
    global records
    while records==True:
        try:
            file = open("records-text.txt",'r')
        except FileNotFoundError:
            file = 0
        window.fill(blue)
        pygame.draw.rect(window, color_rect, 
                 (50, 50, 700, 450), 8)
        pygame.draw.rect(window, color_rect, 
                 (350, 520, 100, 65), 8)
        mesg = menu_style.render("<-", True, yellow)
        window.blit(mesg, [380,
                    525])
        for i in range(9):
            if (file != 0):
                line = file.readline()
                line = line.replace('\n','')
                mesg = menu_style.render("Результат  "+alphavit[i]+
                                        " :         "+
                                        str(line), True, yellow)
                window.blit(mesg, [240,
                    60+45*i])
        pygame.display.update()
        file.close()
        for event in pygame.event.get():
                if event.type == pygame.MOUSEBUTTONDOWN:
                    if event.button == 1:
                        x,y = pygame.mouse.get_pos()
                        if (x>350 and x<450 and y>520 and y<585):
                            global menu
                            menu = True
                            gameLoop()
    

def menu_control():
        global snake_speed
        global menu
        global game_over
        global game_close
        global color_easy,color_medium,color_hard
        global color_new, color_exit, color_records
        pygame.mouse.set_visible(True)#visible mouse
        while menu == True:#Цикл menu
            window.fill(blue)
            screen_menu(color_records, color_new, color_exit)
            pygame.display.update()
            for event in pygame.event.get():
                if event.type == pygame.MOUSEBUTTONDOWN:
                    if event.button == 1:
                        x,y = pygame.mouse.get_pos()
                        if (x>250 and x<600 and y>120 and y<320):
                            menu = False
                            difficult = False
                            while difficult == False:
                                screen_level_difficulty(color_easy, color_medium, color_hard)
                                pygame.display.update()
                                for event in pygame.event.get():
                                    if event.type == pygame.MOUSEBUTTONDOWN:
                                        if event.button == 1: 
                                            x,y = pygame.mouse.get_pos()
                                            if (x>250 and x<600 and y>30 and y<180):
                                                difficult = True
                                                snake_speed = 5
                                            elif (x>250 and x<600 and y>230 and y<380):
                                                difficult = True
                                                snake_speed = 10
                                            elif (x>250 and x<600 and y>430 and y<580):
                                                difficult = True
                                                snake_speed = 15

                                    elif event.type == pygame.MOUSEMOTION:#event mouse motion
                                        x,y = pygame.mouse.get_pos()
                                        if (x>250 and x<600 and y>30 and y<180):
                                            color_easy = lime
                                        elif (x>250 and x<600 and y>230 and y<380):
                                            color_medium = orange
                                        elif (x>250 and x<600 and y>430 and y<580):
                                            color_hard = red
                                        else:
                                            color_easy = yellow
                                            color_medium = yellow
                                            color_hard = yellow
                        elif (x>250 and x<600 and y>350 and y<550):
                            menu = False
                            game_over = True
                            game_close = False
                        elif (x>50 and x<100 and y>50 and y <100):
                            global records
                            records = True
                            screen_records()
                elif event.type == pygame.MOUSEMOTION:
                    x,y = pygame.mouse.get_pos()
                    if (x>250 and x<600 and y>120 and y<320):
                        color_new = orange
                    elif (x>250 and x<600 and y>350 and y<550):
                        color_exit = red
                    elif (x>50 and x<100 and y>50 and y <100):
                        color_records = violet
                    else:
                        color_new = yellow
                        color_exit = yellow
                        color_records = yellow

                        

def screen_level_difficulty(color1, color2, color3):
    window.fill(blue)
    pygame.draw.rect(window, color_rect, 
                 (250, 30, 350, 150), 8)
    pygame.draw.rect(window, color_rect, 
                 (250, 230, 350, 150), 8)
    pygame.draw.rect(window, color_rect, 
                 (250, 430, 350, 150), 8)
    mesg = menu_style.render("легко", True, color1)
    window.blit(mesg, [DIS_WIDTH / 2-25,
                    DIS_HEIGHT / 2-230])
    mesg = menu_style.render("Нормально", True, color2)
    window.blit(mesg, [DIS_WIDTH / 2-55,
                    DIS_HEIGHT / 2-30])
    mesg = menu_style.render("Сложно", True, color3)
    window.blit(mesg, [DIS_WIDTH / 2-35,
                    DIS_HEIGHT / 2+170])



def save_records(record):
    try:
        file = open("records-text.txt",'r')
    except FileNotFoundError:
        file = 0
    if (file != 0):
        text = file.read()
    try:
        file = open("records-text.txt",'w')
    except FileNotFoundError:
        file = 0
    if (file != 0):
        file.write(str(record) + '\n')
        file.write(text)
        file.close()
    
    
def gameLoop():
    global game_over
    global game_close
    game_over = False
    game_close = False
 
    x1 = DIS_WIDTH / 2
    y1 = DIS_HEIGHT / 2
 
    x1_change = 0
    y1_change = 0
    
    snake_List = []
    Length_of_snake = 1
 
    foodx = round(random.randrange(60, DIS_WIDTH - snake_block-60) / 10.0) * 10.0
    foody = round(random.randrange(60, DIS_HEIGHT - snake_block-60) / 10.0) * 10.0
 
    while not game_over:
        
        menu_control()
        pygame.mouse.set_visible(False)#visible mouse          
        global paused
        while paused == True:#Цикл pause
            window.fill(blue)
            screen_pause("Pause")
            pygame.display.update()
            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_p:
                        paused = False
        while game_close == True:
            window.fill(blue)
            pygame.draw.ellipse(window, orange, 
                    (100, 165, 550, 100),8)
            pygame.draw.ellipse(window, orange, 
                    (75, 140, 600, 150),4)
            pygame.draw.ellipse(window, orange, 
                    (50, 115, 650, 200),2)
            
            text("Нажмите Space - Играть снова или Escape - Выход", red)
            Your_score(Length_of_snake - 1)
            pygame.display.update()
 
            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    
                    if event.key == pygame.K_ESCAPE:
                        #game_over = True
                        game_close = False
                        global menu
                        menu = True
                        save_records(Length_of_snake-1)
                        gameLoop()
                        
                    if event.key == pygame.K_SPACE:
                        save_records(Length_of_snake-1)
                        gameLoop()
 
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT or event.key == pygame.K_a:
                    x1_change = -snake_block
                    y1_change = 0
                elif event.key == pygame.K_RIGHT or event.key == pygame.K_d:
                    x1_change = snake_block
                    y1_change = 0
                elif event.key == pygame.K_UP or event.key == pygame.K_w:
                    y1_change = -snake_block
                    x1_change = 0
                elif event.key == pygame.K_DOWN or event.key == pygame.K_s:
                    y1_change = snake_block
                    x1_change = 0
                elif event.key == pygame.K_p:
                    paused = True
            if event.type == pygame.MOUSEBUTTONDOWN:#Событие mouse
                #print("Нажата кнопка: ", event.button)
                if event.button == 1:
                    x,y = pygame.mouse.get_pos()
                    
            
    
            
 
        if x1 >= DIS_WIDTH or x1 < 0 or y1 >= DIS_HEIGHT or y1 < 0:
            game_close = True
        x1 += x1_change
        y1 += y1_change
        window.fill(blue)
        pygame.draw.rect(window, red,
                         [foodx, foody, snake_block,
                          snake_block],
                         5)
        pygame.draw.line(window, color_line, 
                 [1, 1], 
                 [1, 597], 2)
        pygame.draw.line(window, color_line, 
                 [1, 1], 
                 [797, 1], 2)
        pygame.draw.line(window, color_line, 
                 [797, 1], 
                 [797, 597], 2)
        pygame.draw.line(window, color_line, 
                 [1, 597], 
                 [797, 597], 2)
        snake_Head = []
        snake_Head.append(x1)
        snake_Head.append(y1)
        snake_List.append(snake_Head)
        if len(snake_List) > Length_of_snake:
            del snake_List[0]
 
        for x in snake_List[:-1]:
            if x == snake_Head:
                game_close = True
 
        our_snake(snake_block, snake_List)
        Your_score(Length_of_snake - 1)
 
        pygame.display.update()
 
        if x1 == foodx and y1 == foody:
            foodx = round(random.randrange(60, DIS_WIDTH - snake_block-60) / 10.0) * 10.0
            foody = round(random.randrange(60, DIS_HEIGHT - snake_block-60) / 10.0) * 10.0
            Length_of_snake += 1
            if (catch != -999):
                catch.play()
            
 
        clock.tick(snake_speed)
    #file.close()
    pygame.quit()
    sys.exit()
 
 
gameLoop()
